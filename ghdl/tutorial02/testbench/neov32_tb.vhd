library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.math_real.all;

library neorv32;
use neorv32.neorv32_package.all;
use neorv32.neorv32_application_image.all; -- this file is generated by the image generator
use std.textio.all;

entity neorv32_tb is
end neorv32_tb;

architecture test of neorv32_tb is

  -- User Configuration ---------------------------------------------------------------------
  -- -------------------------------------------------------------------------------------------
  constant f_clock_c               : natural := 100000000; -- main clock in Hz
  constant baud0_rate_c            : natural := 19200; -- simulation UART0 (primary UART) baud rate
  -- -------------------------------------------------------------------------------------------

  -- internals - hands off! --
  constant uart0_baud_val_c : real := real(f_clock_c) / real(baud0_rate_c);
  constant t_clock_c        : time := (1 sec) / f_clock_c;

  -- generators --
  signal clk_gen, rst_gen : std_ulogic := '0';

  -- text.io --
  file file_uart0_tx_out : text open write_mode is "neorv32.testbench_uart0.out";

  -- uart --
  signal uart0_txd : std_ulogic;
  signal uart0_rxd : std_ulogic;

  -- gpio --
  signal gpio : std_ulogic_vector(7 downto 0);
  
  component neorv32_test_setup_bootloader is
          port (
          -- Global control --
          clk_i       : in  std_ulogic; -- global clock, rising edge
          rstn_i      : in  std_ulogic; -- global reset, low-active, async
          -- GPIO --
          gpio_o      : out std_ulogic_vector(7 downto 0); -- parallel output
          -- UART0 --
          uart0_txd_o : out std_ulogic; -- UART0 send data
          uart0_rxd_i : in  std_ulogic  -- UART0 receive data
            );
   end component;

begin

  -- Clock/Reset Generator ------------------------------------------------------------------
  -- -------------------------------------------------------------------------------------------
  clk_gen <= not clk_gen after (t_clock_c/2);
  rst_gen <= '0', '1' after 60*(t_clock_c/2);
  dut: neorv32_test_setup_bootloader port map (clk_gen, rst_gen, gpio, uart0_txd, uart0_rxd);


  -- UART Simulation Receiver ---------------------------------------------------------------
  -- -------------------------------------------------------------------------------------------
--  uart0_checker: entity work.uart_rx_simple
-- generic map (
--    name => "uart0",
--    uart_baud_val_c => uart0_baud_val_c
--  )
--  port map (
--    clk => clk_gen,
--    uart_txd => uart0_txd
--  );


end test;
